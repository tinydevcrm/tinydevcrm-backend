# version: '3.0'

# services:
#     web:
#         # build:
#         #     context: ./app
#         #     dockerfile: development.Dockerfile
#         image: 267131297086.dkr.ecr.us-east-1.amazonaws.com/tinydevcrm-api-web:latest
#         command: python manage.py runserver 0.0.0.0:8000
#         volumes:
#             - ./app/src/:/usr/src/app/
#         ports:
#             - 8000:8000
#         env_file:
#             - ./app/conf/.env.dev
#         depends_on:
#             - db
#     db:
#         # build:
#         #     context: ./db
#         #     dockerfile: Dockerfile
#         image: postgres:12.0-alpine
#         volumes:
#             - postgres_data:/var/lib/postgresql/data/
#         env_file:
#             - ./db/conf/.env.dev

# volumes:
#     # Persisting the data within the PostgreSQL instance to a Docker volume,
#     # that binds to '/var/lib/postgresql/data/' directory in the container.
#     postgres_data:



version: '3.7'

services:
    web:
        build:
            context: ./app
            dockerfile: production.Dockerfile
        command: gunicorn src.wsgi:application --bind 0.0.0.0:8000
        volumes:
            - static_volume:/home/app/web/staticfiles
            - media_volume:/home/app/web/mediafiles
        expose:
            - 8000
        env_file:
            - ./app/conf/.env.prod
        depends_on:
            - db
    db:
        build:
            context: ./db
            dockerfile: Dockerfile
        volumes:
            - postgres_data:/var/lib/postgresql/data
        env_file:
            - ./app/conf/.env.prod.db
    nginx:
        build:
            context: ./nginx
            dockerfile: Dockerfile
        volumes:
            - static_volume:/home/app/web/staticfiles
            - media_volume:/home/app/web/mediafiles
        ports:
            - 1337:80
        depends_on:
            - web

volumes:
    postgres_data:
    static_volume:
    media_volume:
